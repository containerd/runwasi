[package]
name = "containerd-shim-wasmtime"
version.workspace = true
edition.workspace = true

[dependencies]
containerd-shim = { workspace = true }
containerd-shim-wasm = { workspace = true, features = ["libcontainer_default"]}
log = { workspace = true }
ttrpc = { workspace = true }

# We are not including the `async` feature here:
# 1. Because we don't even use it
# 2. Because it pulls in a lot of dependencies that we don't need
# 3. Because that dependency (wasmtime-fiber) links to native code
# 4. The wasmedge shim also uses wasmtime-fiber... which means those transative dependencies need to be the same or compilation fails
wasmtime = { version = "11.0", default-features = false, features = [
    'cache',
    'wat',
    'jitdump',
    'parallel-compilation',
    'cranelift',
    'pooling-allocator',
    'vtune',
]}

wasmtime-wasi = { version = "11.0", features = ["exit"] }
wasi-common = "11.0"
chrono = { workspace = true }
anyhow = { workspace = true }
cap-std = { workspace = true }
oci-spec = { workspace = true, features = ["runtime"] }
thiserror = { workspace = true }
serde_json = { workspace = true }
serde = { workspace = true }

[target.'cfg(unix)'.dependencies]
libcontainer = { workspace = true }
dbus = { version = "*", optional = true }

[dev-dependencies]
tempfile = "3.8"
serial_test = "*"
env_logger = "0.10"

[features]
vendored_dbus = ["dbus/vendored"]

[[bin]]
name = "containerd-shim-wasmtime-v1"
path = "src/bin/containerd-shim-wasmtime-v1/main.rs"

[[bin]]
name = "containerd-shim-wasmtimed-v1"
path = "src/bin/containerd-shim-wasmtimed-v1/main.rs"

[[bin]]
name = "containerd-wasmtimed"
path = "src/bin/containerd-wasmtimed/main.rs"
