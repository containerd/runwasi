name: Run Benchmarks

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  pull_request:

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: '' #Disable.  By default this action sets environment variable is set to -D warnings.  We manage this in the Makefile
      - uses: ./.github/actions/setup-env
      - uses: ./.github/actions/build
      - name: Run Benchmarks
        shell: bash
        run: |
          set -o pipefail
          cargo bench -p containerd-shim-benchmarks -- --output-format bencher | tee output.txt
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: Criterion.rs Benchmark
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # my experimental local benchmarking seems to have a 20% margin of error. 
          # So I set the alert threshold to 130% of the previous benchmark result.
          # If the current benchmark result is more than 130% of the previous benchmark result, it will fail.
          alert-threshold: '130%'
          fail-on-alert: ${{ github.event_name == 'schedule' }}
          alert-comment-cc-users: '@runwasi-committers'
          # Enable Job Summary
          summary-always: true
          # Automatically push the benchmark result to gh-pages branch
          # See https://github.com/benchmark-action/github-action-benchmark?tab=readme-ov-file#charts-on-github-pages-1 for more details
          auto-push: ${{ github.event_name == 'schedule' }}

  benchmark-mem:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: '' #Disable.  By default this action sets environment variable is set to -D warnings.  We manage this in the Makefile
      - uses: ./.github/actions/setup-env
      - uses: ./.github/actions/build
      - name: Run Benchmarks
        shell: bash
        run: |
          set -euxo pipefail
          for RUNTIME in wasmtime wasmedge wasmer wamr; do
            sudo ./scripts/benchmark-mem.sh $RUNTIME > bench-mem-$RUNTIME.json
          done
          cat bench-mem-* | jq -s 'flatten(1)' > bench-mem.json
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: Criterion.rs Benchmark
          tool: 'customSmallerIsBetter'
          output-file-path: bench-mem.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # my experimental local benchmarking seems to have a 20% margin of error. 
          # So I set the alert threshold to 130% of the previous benchmark result.
          # If the current benchmark result is more than 130% of the previous benchmark result, it will fail.
          alert-threshold: '130%'
          fail-on-alert: ${{ github.event_name == 'schedule' }}
          alert-comment-cc-users: '@runwasi-committers'
          # Enable Job Summary
          summary-always: true
          # Automatically push the benchmark result to gh-pages branch
          # See https://github.com/benchmark-action/github-action-benchmark?tab=readme-ov-file#charts-on-github-pages-1 for more details
          auto-push: ${{ github.event_name == 'schedule' }}
  
  benchmark-http:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: '' #Disable.  By default this action sets environment variable is set to -D warnings.  We manage this in the Makefile
      - uses: ./.github/actions/setup-env
      - uses: ./.github/actions/build
      - name: Start wasmtime shim
        shell: bash
        run: |
          sudo ctr run --rm --net-host --runtime=io.containerd.wasmtime.v1 ghcr.io/containerd/runwasi/wasi-demo-http:latest wasi-http /wasi-http.wasm &
          sleep 1
      - name: Wait for wasmtime shim to start
        shell: bash
        run: |
          while ! curl -s http://127.0.0.1:8080 > /dev/null; do
            sleep 1
          done
        timeout-minutes: 5
      - name: Run HTTP throughput and latency benchmarks
        if: success()
        uses: ./.github/actions/run-hey-load-test
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Stop wasmtime shim
        if: success()
        shell: bash
        run: |
          sudo ctr task kill -s SIGKILL wasi-http

  benchmark-stress:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: '' #Disable.  By default this action sets environment variable is set to -D warnings.  We manage this in the Makefile
      - uses: ./.github/actions/setup-env
      - name: Setup build profile
        shell: bash
        run: echo "OPT_PROFILE=release" >> ${GITHUB_ENV}
      - uses: ./.github/actions/build
      - name: Run Stress Tests
        shell: bash
        run: |
          set -euxo pipefail
          for RUNTIME in wasmtime wasmedge wasmer wamr; do
            # Run containerd stress test
            make test/stress-c8d-$RUNTIME \
              STRESS_TEST_COUNT=1000 \
              STRESS_TEST_TIMEOUT=10s \
              STRESS_TEST_JSON=stress-bench-c8d-$RUNTIME.json \
              STRESS_TEST_IMAGE=ghcr.io/containerd/runwasi/wasi-demo-app:latest
            
            # Run non-containerd stress test
            make OPT_PROFILE=release test/stress-$RUNTIME \
              STRESS_TEST_COUNT=1000 \
              STRESS_TEST_TIMEOUT=10s \
              STRESS_TEST_JSON=stress-bench-$RUNTIME.json \
              STRESS_TEST_IMAGE=ghcr.io/containerd/runwasi/wasi-demo-app:latest
          done
          cat stress-bench-*.json | jq -s 'flatten(1)' > stress-bench.json
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1.20.4
        with:
          name: Stress Test Benchmark
          tool: 'customBiggerIsBetter'
          output-file-path: stress-bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          alert-threshold: '130%'
          fail-on-alert: ${{ github.event_name == 'schedule' }}
          alert-comment-cc-users: '@runwasi-committers'
          summary-always: true
          auto-push: ${{ github.event_name == 'schedule' }}
